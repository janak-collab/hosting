<?php
namespace App;

use FastRoute\RouteCollector;
use FastRoute\Dispatcher;

class Router {
    private $dispatcher;

    public function __construct() {
        $this->dispatcher = \FastRoute\simpleDispatcher(function(RouteCollector $r) {
            // Basic routes only
            $r->addRoute('GET', '/', 'DashboardController@index');
            $r->addRoute('GET', '/phone-note', 'PhoneNoteController@showForm');
            $r->addRoute('GET', '/it-support', 'ITSupportController@showForm');
            $r->addRoute('GET', '/admin/login', 'ITSupportController@handleAdminLogin');
            $r->addRoute('GET', '/status', 'PortalController@status');
        });
    }

    public function dispatch($method, $uri) {
        $routeInfo = $this->dispatcher->dispatch($method, $uri);
        
        switch ($routeInfo[0]) {
            case Dispatcher::NOT_FOUND:
                http_response_code(404);
                require APP_PATH . '/resources/views/errors/404.php';
                break;
                
            case Dispatcher::METHOD_NOT_ALLOWED:
                http_response_code(405);
                echo "Method not allowed";
                break;
                
            case Dispatcher::FOUND:
                $handler = $routeInfo[1];
                $vars = $routeInfo[2];
                
                if (is_callable($handler)) {
                    call_user_func($handler, $vars);
                } else if (strpos($handler, '@') !== false) {
                    list($controller, $method) = explode('@', $handler);
                    $controllerClass = "\\App\\Controllers\\{$controller}";
                    
                    if (class_exists($controllerClass)) {
                        $instance = new $controllerClass();
                        if (method_exists($instance, $method)) {
                            call_user_func_array([$instance, $method], [$vars]);
                        } else {
                            http_response_code(500);
                            echo "Method {$method} not found in controller {$controller}";
                        }
                    } else {
                        http_response_code(500);
                        echo "Controller {$controller} not found";
                    }
                }
                break;
        }
    }
}
